// weekly contest 182
1,find lucky intger in an Array
   int findLucky(vector<int>& arr) {
        int count[501] = {0};
        for(int i = 0; i < arr.size(); ++i){
            count[arr[i]]++;
        }
        
        int result = -1;
        for(int i = 1; i < 501; ++i){
            if(count[i] == i){
                result = result < i ? i : result;
            }
        }
        return result;
    }
2,count Number of Teams
    int numTeams(vector<int>& rating) {
        // 判断递增子序列 或者 递减子序列
        int count = 0;
        for(int i = 0; i < rating.size(); ++i){
            for(int j = i + 1;j < rating.size(); ++j){
                for(int k = j + 1; k < rating.size(); ++k){
                    if(rating[i] > rating[j] && rating[j] > rating[k]
                      || rating[i] < rating[j] && rating[j] < rating[k]){
                        count++;
                    }
                }
            }
        }
        return count;
    }
3,Design Underground System
    class UndergroundSystem {
    public:
    	UndergroundSystem() {
        
    	}	
    
    	void checkIn(int id, string stationName, int t) {
           vector<int> temp(2);
           temp[0] = id;
           temp[1] = t;
           m_checkIn[stationName].push_back(temp);
        }
    
        void checkOut(int id, string stationName, int t) {
           vector<int> temp(2);
           temp[0] = id;
           temp[1] = t;
           m_checkOut[stationName].push_back(temp);
        }
    
        double getAverageTime(string startStation, string endStation) {
           double time = 0.0;
           int count = 0;
           for(int i = 0; i < m_checkIn[startStation].size(); ++i){
              for(int j = 0; j < m_checkOut[endStation].size();++j){
                  if(m_checkIn[startStation][i][0] == m_checkOut[endStation][j][0]){
                      time = time + (m_checkOut[endStation][j][1] - m_checkIn[startStation][i][1]);
                      count++;
                  }
              }
           }
           if(count){
            time = time / count;
           }
           return time;
    	}
    
        map<string,vector<vector<int>>> m_checkIn;
        map<string,vector<vector<int>>> m_checkOut;
    };
